#!/bin/env python
import os
from optparse import OptionParser


parser = OptionParser()

parser.add_option("-f", "--filename", action="store", type="string", dest="filename")

parser.add_option("-s", "--stripeSize", action="store", type="string", dest="stripeSize")

parser.add_option("-S", "--fileSize", action="store", type="string", dest="fileSize")

parser.add_option("-c", "--stripeCount", action="store", type="int", dest="stripeCount")

parser.add_option("-p", "--PBSscript", action="store_true", dest="PBSscript")

(options,args) = parser.parse_args()

if(options.PBSscript):
    NUM_NODES = raw_input('Enter desired number of nodes: ')
    TOTAL_NUM_RANKS = int(NUM_NODES) * 16
else:
    TOTAL_NUM_RANKS = int(os.environ('PBS_NUM_NODES')) * 16
    
cmds = []

cmds.append("lfs setstripe --size {stripeSize} -c {stripeCount} {filename}".format(stripeSize=options.stripeSize, stripeCount=options.stripeCount, filename=options.filename))
cmds.append("export OMP_NUM_THREADS=1")
cmds.append("aprun -n {totalRanks} -N 16 -d $OMP_NUM_THREADS ./elsi.titan.exe --size {fileSize} --numIORanks $PBS_NUM_NODES --create {filename} > elsi.$PBS_JOBID.txt".format(totalRanks=TOTAL_NUM_RANKS, fileSize=options.fileSize, filename=options.filename))
cmds.append("source $MODULESHOME/init/bash")
cmds.append("module load python_matplotlib")
cmds.append("python graph.py --file elsi.$PBS_JOBID.txt --numNodes $PBS_NUM_NODES")
cmds.append("mv elsiResults.html Official-Reports/elsiResults.$PBS_JOBID.html ")
cmds.append("mv OpenTime.* /Official-Reports/  ")
cmds.append("mv CloseTime.* /Official-Reports/  ")
cmds.append("[ -e GenerateTime.* ] && mv GenerateTime.* /Official-Reports/     ")
cmds.append("[ -e WriteTime.* ] && mv WriteTime.* /Official-Reports/  ")
cmds.append("[ -e ReadTime.* ] && mv ReadTime.* /Official-Reports/ ")
cmds.append("[ -e VerifyTime.* ] && mv VerifyTime.* /Official-Reports/")
    
 	
if(options.PBSscript):
    PROJ_ID = raw_input('Enter your project ID: ')
    EMAIL_ADDRESS = raw_input('Enter your email address: ')
    WALL_TIME = raw_input('Enter desired walltime(hh:mm:ss): ')
    
    f = open('elsi.titan.pbs', 'w')

    cmds.insert(0,"#!/bin/bash")
    cmds.insert(1,"# Begin PBS directives")
    cmds.insert(2,"#PBS -A {projid}".format(projid=PROJ_ID))
    cmds.insert(3,"#PBS -N elsi-titan")
    cmds.insert(4,"#PBS -M {email}".format(email=EMAIL_ADDRESS))
    cmds.insert(5,"#PBS -m e ")
    cmds.insert(6,"#PBS -l walltime={walltime},nodes={nodes}".format(walltime=WALL_TIME, nodes=NUM_NODES))
    cmds.insert(7,"#PBS -l gres=atlas1%atlas2")
    cmds.insert(8,"#    End PBS directives and begin shell commands")
 
    for line in cmds:
        f.write(line + "\n")
    
    f.close()

else:
    for line in cmds:
        os.system(line + "\n")




